{"version":3,"sources":["webpack:///./src/blocks/modules/animation-cubes/animation-cubes.js"],"names":["AnimationCubes","el","root","objects","delays","initNative","ease","easings","progress","Math","pow","sin","PI","easing","scene","THREE","background","setCamera","createCube","nlayers","nfaces","l","t","f","i","j","m","h","q","s","floor","min","abs","x","y","z","renderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","offsetWidth","offsetHeight","appendChild","domElement","render","n","push","oldN","index","delay","opacity","scale","cubeGeo","cubeMaterial","color","map","load","SITE_TEMPLATE_PATH_JS","transparent","voxel","position","set","add","width","height","aspect","D","camera","lookAt","timing","now","performance","startTime","elapsed","duration","trackTime","from","to","timeline","repeat","startAt","keyframes","tick","time","getProgress","rotation","getCurrentValue","meshs","mesh","material","requestAnimationFrame","play","init","raf","elIndex","cancelAnimationFrame","document","addEventListener","e"],"mappings":"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","file":"animation-cubes.ce20.js","sourcesContent":["import * as THREE from 'three';\r\n\r\nexport default class AnimationCubes {\r\n    constructor(el) {\r\n        this.root = el\r\n        if(!this.root) return false\r\n        \r\n        this.objects = []\r\n        this.delays = []\r\n\r\n        // this.init()\r\n        // this.render()\r\n        // this.delayFunc()\r\n        this.initNative()\r\n    }\r\n    init() {\r\n        this.ease =(()=> {\r\n            const easings = {\r\n                \"linear\": progress => {\r\n                    if (progress == 0) return 0;\r\n                    if (progress == 1) return 1;\r\n                    return progress\r\n                },\r\n                \"out-elastic\": progress => {\r\n                    if (progress == 0) return 0;\r\n                    if (progress == 1) return 1;\r\n                    return Math.pow(2, -10 * progress) * Math.sin((progress - .1) * 5 * Math.PI) + 1;\r\n                },\r\n                \"in-out-exponential\": progress => {\r\n                    if (progress == 0) return 0;\r\n                    if (progress == 1) return 1;\r\n                    return (progress *= 2) < 1\r\n                        ? .5 * Math.pow(1024, progress - 1)\r\n                        : .5 * (-Math.pow(2, -10 * (progress - 1)) + 2);\r\n                }\r\n            };\r\n            return ({ easing = \"linear\" }, progress) => easings[easing](progress);\r\n        })()\r\n        this.scene = new THREE.Scene();\r\n        this.scene.background = new THREE.Color(0xf0f0f0);\r\n    \r\n        this.setCamera();\r\n    \r\n        this.createCube(0, 0, 0, 0);\r\n    \r\n        let nlayers = 24,\r\n            nfaces = 6,\r\n            l = 1,\r\n            t = 5, //seconds\r\n            f = (i, j, m) => {\r\n                let h = 0.5 * m,\r\n                    q = 0.25 * m,\r\n                    s = Math.pow(-1, Math.floor(2 * j / m) + 1);\r\n    \r\n                return s * Math.min(i, Math.floor(q - Math.floor(Math.abs(q - (j % h)))));\r\n            }\r\n    \r\n    \r\n        for (let i = 1; i < nlayers; i++) {\r\n            let m = i * nfaces;\r\n    \r\n            for (let j = 0; j < m; j++) {\r\n                let x = l * f(i, j, m),\r\n                    y = -l * f(i, (j + i) % m, m),\r\n                    z = l * f(i, (j + 2 * i) % m, m);\r\n                this.createCube(x, y, z);\r\n            }\r\n        }\r\n    \r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.setSize(this.root.offsetWidth,  this.root.offsetHeight);\r\n        this.root.appendChild(this.renderer.domElement);\r\n    \r\n    \r\n        setTimeout(() => {\r\n            this.render();\r\n        }, 300);\r\n    \r\n        let n = 1,\r\n            j = 0\r\n    \r\n        this.delays[0] = [];\r\n        this.delays[0].push(this.objects[0]);\r\n    \r\n        for (let i = 1; i < nlayers; i++) {\r\n            let m = i * nfaces,\r\n                oldN = n;\r\n    \r\n            n = n + m;\r\n    \r\n            for (let index = oldN; index <= n - 1; index++) {\r\n                let delay = (i * .25 * t / nlayers) * 1000;\r\n    \r\n                if (!this.delays[delay]) this.delays[delay] = [];\r\n    \r\n                this.delays[delay].push(this.objects[index])\r\n    \r\n            }\r\n    \r\n        }\r\n    }\r\n    createCube(x = 0, y = 0, z = 0, opacity = 0) {\r\n        // cubes\r\n        const scale = 2;\r\n        this.cubeGeo = new THREE.BoxBufferGeometry(1 * scale, 1 * scale, 1 * scale);\r\n        \r\n        this.cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff, map: new THREE.TextureLoader().load(`${window.SITE_TEMPLATE_PATH_JS}img/animation-cubes/rect3.png`), transparent: true, opacity: opacity });\r\n        let voxel = new THREE.Mesh(this.cubeGeo, this.cubeMaterial);\r\n        voxel.position.set(x * scale, y * scale, z * scale);\r\n        this.scene.add(voxel);\r\n        this.objects.push(voxel);\r\n    }\r\n    setCamera() {\r\n        const width = this.root.offsetWidth,\r\n            height = this.root.offsetHeight,\r\n            aspect = width / height,\r\n            D = 15;\r\n    \r\n        this.camera = new THREE.OrthographicCamera(-D * aspect, D * aspect, D, -D, 1, 1000);\r\n        this.camera.position.set(20, 20, 20);\r\n        this.camera.lookAt(0, 0, 0);\r\n    }\r\n    render() {\r\n        this.renderer.render(this.scene, this.camera);\r\n        \r\n    }\r\n    trackTime(timing) {\r\n        const now = performance.now();\r\n        if (!timing.startTime) timing.startTime = now;\r\n        const elapsed = now - timing.startTime;\r\n        const { duration } = timing;\r\n        if (duration != null && duration <= elapsed) timing.startTime = null;\r\n        return elapsed;\r\n    }\r\n    getProgress(timing) {\r\n        const { duration } = timing;\r\n        return duration > 0 ? Math.min(this.trackTime(timing) / duration, 1) : 1;\r\n    }\r\n    getCurrentValue({ from = 0, to }, easing) {\r\n        from + (to - from) * easing\r\n    }\r\n    play ({ timeline, repeat = false, startAt = 0 }) {\r\n        const { keyframes, timing } = timeline[startAt];\r\n    \r\n        const tick = (time) => {\r\n            const progress = this.getProgress(timing);\r\n            const easing = this.ease(timing, progress);\r\n            const rotation = this.getCurrentValue(keyframes.rotation, easing);\r\n            const opacity = this.getCurrentValue(keyframes.opacity, easing);\r\n  \r\n            timeline.forEach(el => {\r\n                setTimeout(() => {\r\n                    el.meshs.forEach(mesh => {\r\n                        if ((mesh.rotation.y < (Math.PI / 2)))\r\n                            mesh.rotation.y = rotation;\r\n                        if (mesh.material.opacity != 1)\r\n                            mesh.material.opacity = opacity;\r\n                    });\r\n                }, el.delay);\r\n            })\r\n    \r\n            this.renderer.render(this.scene, this.camera);\r\n            requestAnimationFrame(tick);\r\n        };\r\n    \r\n        tick();\r\n    }\r\n    delayFunc (){\r\n        let timeline = [];\r\n\r\n        for (let delay in this.delays) {\r\n            timeline.push({\r\n                meshs: this.delays[delay],\r\n                delay: delay\r\n            })\r\n        }\r\n\r\n        timeline.forEach(delay => {\r\n            delay.keyframes = {\r\n                rotation: {\r\n                    from: 0,\r\n                    to: Math.PI / 2\r\n                },\r\n                opacity: {\r\n                    from: 0,\r\n                    to: 1\r\n                }\r\n            },\r\n            delay.timing = {\r\n                duration: 1000,\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.play({ timeline, repeat: false });\r\n        }, 500);\r\n    }\r\n\r\n    initNative() {\r\n        var camera, scene, renderer,\r\n        root = this.root;\r\n\r\n        var cubeGeo, cubeMaterial;\r\n\r\n        var objects = [];\r\n\r\n        var delays = [];\r\n\r\n        init();\r\n        render();\r\n\r\n        function init() {\r\n\r\n            scene = new THREE.Scene();\r\n            scene.background = new THREE.Color(0xffffff);\r\n\r\n            setCamera();\r\n\r\n            createCube(0, 0, 0, 0);\r\n\r\n            let nlayers = 24,\r\n                nfaces = 6,\r\n                l = 1,\r\n                t = 5, //seconds\r\n                f = (i, j, m) => {\r\n                    let h = 0.5 * m,\r\n                        q = 0.25 * m,\r\n                        s = Math.pow(-1, Math.floor(2 * j / m) + 1);\r\n\r\n                    return s * Math.min(i, Math.floor(q - Math.floor(Math.abs(q - (j % h)))));\r\n                }\r\n\r\n\r\n            for (let i = 1; i < nlayers; i++) {\r\n                let m = i * nfaces;\r\n\r\n                for (let j = 0; j < m; j++) {\r\n                    let x = l * f(i, j, m),\r\n                        y = -l * f(i, (j + i) % m, m),\r\n                        z = l * f(i, (j + 2 * i) % m, m);\r\n                    createCube(x, y, z);\r\n                }\r\n            }\r\n\r\n            renderer = new THREE.WebGLRenderer({ antialias: true });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(root.offsetWidth,  root.offsetHeight);\r\n            root.appendChild(renderer.domElement);\r\n\r\n\r\n            render();\r\n\r\n            let n = 1,\r\n                j = 0\r\n\r\n            delays[0] = [];\r\n            delays[0].push(objects[0]);\r\n\r\n            for (let i = 1; i < nlayers; i++) {\r\n                let m = i * nfaces,\r\n                    oldN = n;\r\n\r\n                n = n + m;\r\n\r\n                for (let index = oldN; index <= n - 1; index++) {\r\n                    let delay = (i * .25 * t / nlayers) * 1000;\r\n\r\n                    if (!delays[delay]) delays[delay] = [];\r\n\r\n                    delays[delay].push(objects[index])\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        function createCube(x = 0, y = 0, z = 0, opacity = 0) {\r\n            // cubes\r\n            const scale = 2;\r\n            cubeGeo = new THREE.BoxBufferGeometry(1 * scale, 1 * scale, 1 * scale);\r\n            cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff, map: new THREE.TextureLoader().load(`${window.SITE_TEMPLATE_PATH_JS}img/animation-cubes/rect3.png`), transparent: true, opacity: opacity });\r\n            let voxel = new THREE.Mesh(cubeGeo, cubeMaterial);\r\n            voxel.position.set(x * scale, y * scale, z * scale);\r\n            scene.add(voxel);\r\n            objects.push(voxel);\r\n        }\r\n\r\n\r\n        function setCamera() {\r\n            const width = root.offsetWidth,\r\n                height = root.offsetHeight,\r\n                aspect = width / height,\r\n                D = 15;\r\n\r\n            camera = new THREE.OrthographicCamera(-D * aspect, D * aspect, D, -D, 1, 1000);\r\n            camera.position.set(20, 20, 20);\r\n            camera.lookAt(0, 0, 0);\r\n        }\r\n\r\n        function render() {\r\n            renderer.render(scene, camera);\r\n        }\r\n\r\n\r\n\r\n        const trackTime = timing => {\r\n            const now = performance.now();\r\n            if (!timing.startTime) timing.startTime = now;\r\n            const elapsed = now - timing.startTime;\r\n            const { duration } = timing;\r\n            if (duration != null && duration <= elapsed) timing.startTime = null;\r\n            return elapsed;\r\n        };\r\n\r\n        const getProgress = timing => {\r\n            const { duration } = timing;\r\n            return duration > 0 ? Math.min(trackTime(timing) / duration, 1) : 1;\r\n        };\r\n\r\n        const getCurrentValue = ({ from = 0, to }, easing) =>\r\n            from + (to - from) * easing;\r\n\r\n        const ease = (() => {\r\n            const easings = {\r\n                \"linear\": progress => {\r\n                    if (progress == 0) return 0;\r\n                    if (progress == 1) return 1;\r\n                    return progress\r\n                },\r\n                \"out-elastic\": progress => {\r\n                    if (progress == 0) return 0;\r\n                    if (progress == 1) return 1;\r\n                    return Math.pow(2, -10 * progress) * Math.sin((progress - .1) * 5 * Math.PI) + 1;\r\n                },\r\n                \"in-out-exponential\": progress => {\r\n                    if (progress == 0) return 0;\r\n                    if (progress == 1) return 1;\r\n                    return (progress *= 2) < 1\r\n                        ? .5 * Math.pow(1024, progress - 1)\r\n                        : .5 * (-Math.pow(2, -10 * (progress - 1)) + 2);\r\n                }\r\n            };\r\n            return ({ easing = \"linear\" }, progress) => easings[easing](progress);\r\n        })();\r\n\r\n\r\n\r\n        const play = ({ timeline, repeat = false, startAt = 0 }) => {\r\n            const { keyframes, timing } = timeline[startAt];\r\n            let raf;\r\n\r\n            const tick = (time) => {\r\n                const progress = getProgress(timing);\r\n                const easing = ease(timing, progress);\r\n                const rotation = getCurrentValue(keyframes.rotation, easing);\r\n                const opacity = getCurrentValue(keyframes.opacity, easing);\r\n\r\n                timeline.forEach((el, elIndex) => {\r\n                    setTimeout(() => {\r\n                        el.meshs.forEach(mesh => {\r\n                            if ((mesh.rotation.y < (Math.PI / 2)))\r\n                                mesh.rotation.y = rotation;\r\n                            if (mesh.material.opacity != 1)\r\n                                mesh.material.opacity = opacity;\r\n                        });\r\n                    }, el.delay);\r\n                })\r\n\r\n                renderer.render(scene, camera);\r\n                raf = requestAnimationFrame(tick);\r\n            };\r\n\r\n            tick();\r\n\r\n            setTimeout(() => {\r\n                cancelAnimationFrame(raf);\r\n            }, 3000);\r\n        };\r\n\r\n        let timeline = [];\r\n\r\n        for (let delay in delays) {\r\n            timeline.push({\r\n                meshs: delays[delay],\r\n                delay: delay\r\n            })\r\n        }\r\n\r\n        timeline.forEach(delay => {\r\n            delay.keyframes = {\r\n                rotation: {\r\n                    from: 0,\r\n                    to: Math.PI / 2\r\n                },\r\n                opacity: {\r\n                    from: 0,\r\n                    to: 1\r\n                }\r\n            },\r\n            delay.timing = {\r\n                duration: 1000,\r\n            }\r\n        })\r\n\r\n        document.addEventListener('cubes-in-viewport', e => {\r\n            play({ timeline, repeat: false });\r\n        })\r\n    }\r\n}"],"sourceRoot":""}